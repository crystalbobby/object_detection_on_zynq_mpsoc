#-----------------------------------------------------------
# Vivado v2016.3_sdx (64-bit)
# SW Build 1721784 on Tue Nov 29 22:12:24 MST 2016
# IP Build 1720686 on Mon Nov 28 12:39:17 MST 2016
# Start of session at: Wed Dec 14 23:37:34 2016
# Process ID: 18025
# Current directory: /group/paeg/ckohn/zcu102_base_trd_package_2016.3/pl/zcu102_base_trd
# Command line: vivado -s ./scripts/create_project.tcl -tclargs -platform zcu102 -silicon es2 -design ev
# Log file: /group/paeg/ckohn/zcu102_base_trd_package_2016.3/pl/zcu102_base_trd/vivado.log
# Journal file: /group/paeg/ckohn/zcu102_base_trd_package_2016.3/pl/zcu102_base_trd/vivado.jou
#-----------------------------------------------------------
Sourcing tcl script '/proj/xbuilds/2016.3_sdx_1130_1/installs/lin64/SDx/2016.3/Vivado/scripts/init.tcl'
0 Beta devices matching pattern found, 0 enabled.
Loaded SDSoC Platform Tcl Library
start_gui
source ./scripts/create_project.tcl
# set ::platform "zcu102"
# set ::silicon "es1"
# set ::design "base_trd"
# set ip_dir "srcs/ip"
# set hdl_dir "srcs/hdl"
# set ui_dir "srcs/ui"
# set constrs_dir "constrs"
# set scripts_dir "scripts"
# proc help_proc { } {
#   puts "Usage: vivado -s ./scripts/create_project.tcl -tclargs -platform <pfm> -silicon <rev> -design <des>"
#   puts "-platform <pfm> : only 'zcu102'"
#   puts "-silicon <rev>  : one of 'es1' or 'es2'"
#   puts "-design <des>   : one of 'base_trd' or 'ev'"
# }
# for { set i 0 } { $i < $argc } { incr i } {
#   # board
#   if { [lindex $argv $i] == "-platform" } {
#     incr i
#     set platform [lindex $argv $i]
#   # part
#   } elseif { [lindex $argv $i] == "-silicon" } {
#     incr i
#     set silicon [lindex $argv $i]
#   # design
#   } elseif { [lindex $argv $i] == "-design" } {
#     incr i
#     set design [lindex $argv $i]
#   # help
#   } else {
#     help_proc
#     exit
#   }
# }
# if { $platform == "zcu102" } {
#   source $scripts_dir/psu_preset_board_zcu102_gt1111.tcl
#   #set board_part "xilinx.com:zcu102:part0:1.0"
# } else {
#   puts "Invalid selection for parameter -platform: '$platform'"
#   exit
# }
## proc set_psu_preset_board {IPINST} {
## 
## # select DPAUX IO based on silicon rev
## if {$::silicon == "es1"} {
##   set dpaux_io "EMIO"
##   set sd_io "MIO 46 .. 51"
##   set sd_mode "4Bit"
##   set sd_type "SD 2.0"
## } elseif {$::silicon == "es2"} {
##   set dpaux_io "MIO 27 .. 30"
##   set sd_io "MIO 39 .. 51"
##   set sd_mode "8Bit"
##   set sd_type "SD 3.0"
## }
## 
## return [dict create \
## CONFIG.PSU__CAN1__PERIPHERAL__ENABLE {1} \
## CONFIG.PSU__CAN1__PERIPHERAL__IO {MIO 24 .. 25} \
## CONFIG.PSU__CRL_APB__PL2_REF_CTRL__FREQMHZ {300}\
## CONFIG.PSU__DISPLAYPORT__PERIPHERAL__ENABLE {1} \
## CONFIG.PSU__DP__LANE_SEL {Dual Lower} \
## CONFIG.PSU__DP__REF_CLK_SEL {Ref Clk3} \
## CONFIG.PSU__DP__REF_CLK_FREQ {27} \
## CONFIG.PSU__DPAUX__PERIPHERAL__ENABLE {1} \
## CONFIG.PSU__DPAUX__PERIPHERAL__IO $dpaux_io \
## CONFIG.PSU__ENET3__GRP_MDIO__ENABLE {1} \
## CONFIG.PSU__ENET3__GRP_MDIO__IO {MIO 76 .. 77} \
## CONFIG.PSU__ENET3__PERIPHERAL__ENABLE {1} \
## CONFIG.PSU__ENET3__PERIPHERAL__IO {MIO 64 .. 75} \
## CONFIG.PSU__GPIO_EMIO__PERIPHERAL__ENABLE {1} \
## CONFIG.PSU__GPIO0_MIO__IO {MIO 0 .. 25} \
## CONFIG.PSU__GPIO0_MIO__PERIPHERAL__ENABLE {1} \
## CONFIG.PSU__GPIO1_MIO__IO {MIO 26 .. 51} \
## CONFIG.PSU__GPIO1_MIO__PERIPHERAL__ENABLE {1} \
## CONFIG.PSU__HIGH_ADDRESS__ENABLE {1} \
## CONFIG.PSU__I2C0__PERIPHERAL__ENABLE {1} \
## CONFIG.PSU__I2C0__PERIPHERAL__IO {MIO 14 .. 15} \
## CONFIG.PSU__I2C1__PERIPHERAL__ENABLE {1} \
## CONFIG.PSU__I2C1__PERIPHERAL__IO {MIO 16 .. 17} \
## CONFIG.PSU__PMU__GPI0__ENABLE {1} \
## CONFIG.PSU__PMU__GPI0__IO {MIO 26} \
## CONFIG.PSU__PMU__GPI1__ENABLE {0} \
## CONFIG.PSU__PMU__GPI1__IO {<Select>} \
## CONFIG.PSU__PMU__GPI2__ENABLE {0} \
## CONFIG.PSU__PMU__GPI2__IO {<Select>} \
## CONFIG.PSU__PMU__GPI3__ENABLE {0} \
## CONFIG.PSU__PMU__GPI3__IO {<Select>} \
## CONFIG.PSU__PMU__GPI4__ENABLE {0} \
## CONFIG.PSU__PMU__GPI4__IO {<Select>} \
## CONFIG.PSU__PMU__GPI5__ENABLE {0} \
## CONFIG.PSU__PMU__GPI5__IO {<Select>} \
## CONFIG.PSU__PMU__GPO0__ENABLE {1} \
## CONFIG.PSU__PMU__GPO0__IO {MIO 32} \
## CONFIG.PSU__PMU__GPO1__ENABLE {1} \
## CONFIG.PSU__PMU__GPO1__IO {MIO 33} \
## CONFIG.PSU__PMU__GPO2__ENABLE {1} \
## CONFIG.PSU__PMU__GPO2__IO {MIO 34} \
## CONFIG.PSU__PMU__GPO3__ENABLE {1} \
## CONFIG.PSU__PMU__GPO3__IO {MIO 35} \
## CONFIG.PSU__PMU__GPO4__ENABLE {1} \
## CONFIG.PSU__PMU__GPO4__IO {MIO 36} \
## CONFIG.PSU__PMU__GPO5__ENABLE {1} \
## CONFIG.PSU__PMU__GPO5__IO {MIO 37} \
## CONFIG.PSU__PMU__PERIPHERAL__ENABLE {1} \
## CONFIG.PSU__QSPI__GRP_FBCLK__ENABLE {1} \
## CONFIG.PSU__QSPI__GRP_FBCLK__IO {MIO 6} \
## CONFIG.PSU__QSPI__PERIPHERAL__DATA_MODE {x4} \
## CONFIG.PSU__QSPI__PERIPHERAL__ENABLE {1} \
## CONFIG.PSU__QSPI__PERIPHERAL__IO {MIO 0 .. 12} \
## CONFIG.PSU__QSPI__PERIPHERAL__MODE {Dual Parallel} \
## CONFIG.PSU__SATA__LANE1__ENABLE {1} \
## CONFIG.PSU__SATA__LANE1__IO {GT Lane3} \
## CONFIG.PSU__SATA__PERIPHERAL__ENABLE {1} \
## CONFIG.PSU__SATA__REF_CLK_SEL {Ref Clk1} \
## CONFIG.PSU__SATA__REF_CLK_FREQ {150} \
## CONFIG.PSU__SD1__GRP_CD__ENABLE {1} \
## CONFIG.PSU__SD1__GRP_CD__IO {MIO 45} \
## CONFIG.PSU__SD1__GRP_POW__ENABLE {1} \
## CONFIG.PSU__SD1__GRP_POW__IO {MIO 43} \
## CONFIG.PSU__SD1__GRP_WP__ENABLE {1} \
## CONFIG.PSU__SD1__GRP_WP__IO {MIO 44} \
## CONFIG.PSU__SD1__PERIPHERAL__ENABLE {1} \
## CONFIG.PSU__SD1__PERIPHERAL__IO $sd_io \
## CONFIG.PSU__SD1__DATA_TRANSFER_MODE $sd_mode \
## CONFIG.PSU__SD1__SLOT_TYPE $sd_type \
## CONFIG.PSU__SWDT0__PERIPHERAL__ENABLE {1} \
## CONFIG.PSU__SWDT0__PERIPHERAL__IO {EMIO} \
## CONFIG.PSU__TTC0__PERIPHERAL__ENABLE {1} \
## CONFIG.PSU__TTC0__PERIPHERAL__IO {EMIO} \
## CONFIG.PSU__UART0__PERIPHERAL__ENABLE {1} \
## CONFIG.PSU__UART0__PERIPHERAL__IO {MIO 18 .. 19} \
## CONFIG.PSU__UART1__PERIPHERAL__ENABLE {1} \
## CONFIG.PSU__UART1__PERIPHERAL__IO {MIO 20 .. 21} \
## CONFIG.PSU__USB0__PERIPHERAL__ENABLE {1} \
## CONFIG.PSU__USB0__PERIPHERAL__IO {MIO 52 .. 63} \
## CONFIG.PSU__USB0__REF_CLK_SEL {Ref Clk2} \
## CONFIG.PSU__USB0__REF_CLK_FREQ {26} \
## CONFIG.PSU__USB3_0__PERIPHERAL__ENABLE {1} \
## CONFIG.PSU__USB3_0__PERIPHERAL__IO {GT Lane2} \
## CONFIG.PSU__USE__IRQ0 {1} \
## CONFIG.PSU__USE__IRQ1 {0} \
## CONFIG.PSU__USE__M_AXI_GP0 {1} \
## CONFIG.PSU__USE__M_AXI_GP2 {0} \
## CONFIG.PSU__USE__S_AXI_GP0 {0} \
## CONFIG.PSU__USE__S_AXI_GP1 {0} \
## CONFIG.PSU__USE__S_AXI_GP2 {0} \
## CONFIG.PSU__USE__S_AXI_GP3 {1} \
## CONFIG.PSU__USE__S_AXI_GP5 {0} \
## CONFIG.PSU__USE__VIDEO {1} \
## ]
## }
# puts "INFO: Target platform selected: '$platform'"
INFO: Target platform selected: 'zcu102'
# if { $silicon != "es1" && $silicon != "es2" } {
#   puts "Invalid selection for parameter -silicon: '$silicon'"
#   exit
# }
# if { $design != "base_trd" && $design != "ev" } {
#   puts "Invalid selection for parameter -design: 'design'"
#   exit
# }
# set part "xczu9eg-ffvb1156-2L-e-${::silicon}"
# set pin_xdc_file "pin_${::platform}_${::silicon}.xdc"
# set timing_xdc_file "timing_${::silicon}.xdc"
# set design_name "${::platform}_${::silicon}_${::design}"
# puts "INFO: Target part selected: '$part'"
INFO: Target part selected: 'xczu9eg-ffvb1156-2L-e-es2'
# create_project $design_name $design_name -part $part -force
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1704] No user IP repositories specified
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/proj/xbuilds/2016.3_sdx_1130_1/installs/lin64/SDx/2016.3/Vivado/data/ip'.
create_project: Time (s): cpu = 00:00:26 ; elapsed = 00:00:10 . Memory (MB): peak = 6432.211 ; gain = 447.996 ; free physical = 161629 ; free virtual = 273339
# set_property ip_repo_paths $ip_dir [current_fileset]
# update_ip_catalog -rebuild
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1700] Loaded user IP repository '/group/paeg/ckohn/zcu102_base_trd_package_2016.3/pl/zcu102_base_trd/srcs/ip'.
# create_bd_design $design_name
Wrote  : </group/paeg/ckohn/zcu102_base_trd_package_2016.3/pl/zcu102_base_trd/zcu102_es2_ev/zcu102_es2_ev.srcs/sources_1/bd/zcu102_es2_ev/zcu102_es2_ev.bd> 
create_bd_design: Time (s): cpu = 00:00:09 ; elapsed = 00:00:06 . Memory (MB): peak = 6444.871 ; gain = 12.660 ; free physical = 161590 ; free virtual = 273329
# source $scripts_dir/psu_preset_clk_sivdef.tcl
## proc set_psu_preset_clk {IPINST} {
## 
## # select params based on silicon rev
## if {$::silicon == "es1"} {
##   set apll_fbdiv 66
##   set gem_tsu_src "RPLL"
##   set gem_tsu_div 3
## } elseif {$::silicon == "es2"} {
##   set apll_fbdiv 72
##   set gem_tsu_src "IOPLL"
##   set gem_tsu_div 6
## }
## 
## return [dict create \
## CONFIG.PSU__OVERRIDE__BASIC_CLOCK {1} \
## CONFIG.PSU__PSS_REF_CLK__FREQMHZ {33.333} \
## CONFIG.PSU__CRF_APB__APLL_CTRL__SRCSEL {PSS_REF_CLK} \
## CONFIG.PSU__CRF_APB__APLL_CTRL__DIV2 {1} \
## CONFIG.PSU__CRF_APB__APLL_CTRL__FBDIV $apll_fbdiv \
## CONFIG.PSU__CRF_APB__DPLL_CTRL__SRCSEL {PSS_REF_CLK} \
## CONFIG.PSU__CRF_APB__DPLL_CTRL__DIV2 {1} \
## CONFIG.PSU__CRF_APB__DPLL_CTRL__FBDIV {64} \
## CONFIG.PSU__CRF_APB__VPLL_CTRL__SRCSEL {PSS_REF_CLK} \
## CONFIG.PSU__CRF_APB__VPLL_CTRL__DIV2 {1} \
## CONFIG.PSU__CRF_APB__VPLL_CTRL__FBDIV {57} \
## CONFIG.PSU__CRF_APB__VPLL_FRAC_CFG__ENABLED {1} \
## CONFIG.PSU__CRF_APB__VPLL_CTRL__FRACDATA {0.508} \
## CONFIG.PSU__CRL_APB__IOPLL_CTRL__SRCSEL {PSS_REF_CLK} \
## CONFIG.PSU__CRL_APB__IOPLL_CTRL__DIV2 {0} \
## CONFIG.PSU__CRL_APB__IOPLL_CTRL__FBDIV {45} \
## CONFIG.PSU__CRL_APB__RPLL_CTRL__SRCSEL {PSS_REF_CLK} \
## CONFIG.PSU__CRL_APB__RPLL_CTRL__DIV2 {1} \
## CONFIG.PSU__CRL_APB__RPLL_CTRL__FBDIV {72} \
## CONFIG.PSU__CRF_APB__APLL_TO_LPD_CTRL__DIVISOR0 {3} \
## CONFIG.PSU__CRF_APB__DPLL_TO_LPD_CTRL__DIVISOR0 {3} \
## CONFIG.PSU__CRF_APB__VPLL_TO_LPD_CTRL__DIVISOR0 {3} \
## CONFIG.PSU__CRL_APB__IOPLL_TO_FPD_CTRL__DIVISOR0 {3} \
## CONFIG.PSU__CRL_APB__RPLL_TO_FPD_CTRL__DIVISOR0 {3} \
## CONFIG.PSU__CRF_APB__ACPU_CTRL__SRCSEL {APLL} \
## CONFIG.PSU__CRF_APB__ACPU_CTRL__DIVISOR0 {1} \
## CONFIG.PSU__CRF_APB__DBG_TRACE_CTRL__SRCSEL {IOPLL} \
## CONFIG.PSU__CRF_APB__DBG_TRACE_CTRL__DIVISOR0 {2} \
## CONFIG.PSU__CRF_APB__DBG_FPD_CTRL__SRCSEL {IOPLL} \
## CONFIG.PSU__CRF_APB__DBG_FPD_CTRL__DIVISOR0 {2} \
## CONFIG.PSU__CRF_APB__DBG_TSTMP_CTRL__SRCSEL {IOPLL} \
## CONFIG.PSU__CRF_APB__DBG_TSTMP_CTRL__DIVISOR0 {2} \
## CONFIG.PSU__CRF_APB__DP_VIDEO_REF_CTRL__SRCSEL {RPLL} \
## CONFIG.PSU__CRF_APB__DP_VIDEO_REF_CTRL__DIVISOR0 {3} \
## CONFIG.PSU__CRF_APB__DP_VIDEO_REF_CTRL__DIVISOR1 {1} \
## CONFIG.PSU__CRF_APB__DP_AUDIO_REF_CTRL__SRCSEL {VPLL} \
## CONFIG.PSU__CRF_APB__DP_AUDIO_REF_CTRL__DIVISOR0 {39} \
## CONFIG.PSU__CRF_APB__DP_AUDIO_REF_CTRL__DIVISOR1 {1} \
## CONFIG.PSU__CRF_APB__DP_STC_REF_CTRL__SRCSEL {RPLL} \
## CONFIG.PSU__CRF_APB__DP_STC_REF_CTRL__DIVISOR0 {17} \
## CONFIG.PSU__CRF_APB__DP_STC_REF_CTRL__DIVISOR1 {1} \
## CONFIG.PSU__CRF_APB__DPDMA_REF_CTRL__SRCSEL {APLL} \
## CONFIG.PSU__CRF_APB__DPDMA_REF_CTRL__DIVISOR0 {2} \
## CONFIG.PSU__CRF_APB__DDR_CTRL__SRCSEL {DPLL} \
## CONFIG.PSU__CRF_APB__DDR_CTRL__DIVISOR0 {2} \
## CONFIG.PSU__CRF_APB__DDR_CTRL__FREQMHZ {1067} \
## CONFIG.PSU__CRF_APB__GPU_REF_CTRL__SRCSEL {IOPLL} \
## CONFIG.PSU__CRF_APB__GPU_REF_CTRL__DIVISOR0 {1} \
## CONFIG.PSU__CRF_APB__SATA_REF_CTRL__SRCSEL {IOPLL} \
## CONFIG.PSU__CRF_APB__SATA_REF_CTRL__DIVISOR0 {2} \
## CONFIG.PSU__CRF_APB__PCIE_REF_CTRL__SRCSEL {IOPLL} \
## CONFIG.PSU__CRF_APB__PCIE_REF_CTRL__DIVISOR0 {2} \
## CONFIG.PSU__CRF_APB__GDMA_REF_CTRL__SRCSEL {APLL} \
## CONFIG.PSU__CRF_APB__GDMA_REF_CTRL__DIVISOR0 {2} \
## CONFIG.PSU__CRF_APB__TOPSW_MAIN_CTRL__SRCSEL {VPLL} \
## CONFIG.PSU__CRF_APB__TOPSW_MAIN_CTRL__DIVISOR0 {2} \
## CONFIG.PSU__CRF_APB__TOPSW_LSBUS_CTRL__SRCSEL {IOPLL} \
## CONFIG.PSU__CRF_APB__TOPSW_LSBUS_CTRL__DIVISOR0 {5} \
## CONFIG.PSU__CRL_APB__IOU_SWITCH_CTRL__SRCSEL {IOPLL} \
## CONFIG.PSU__CRL_APB__IOU_SWITCH_CTRL__DIVISOR0 {6} \
## CONFIG.PSU__CRL_APB__GEM0_REF_CTRL__SRCSEL {IOPLL} \
## CONFIG.PSU__CRL_APB__GEM0_REF_CTRL__DIVISOR0 {12} \
## CONFIG.PSU__CRL_APB__GEM0_REF_CTRL__DIVISOR1 {1} \
## CONFIG.PSU__CRL_APB__GEM1_REF_CTRL__SRCSEL {IOPLL} \
## CONFIG.PSU__CRL_APB__GEM1_REF_CTRL__DIVISOR0 {12} \
## CONFIG.PSU__CRL_APB__GEM1_REF_CTRL__DIVISOR1 {1} \
## CONFIG.PSU__CRL_APB__GEM2_REF_CTRL__SRCSEL {IOPLL} \
## CONFIG.PSU__CRL_APB__GEM2_REF_CTRL__DIVISOR0 {12} \
## CONFIG.PSU__CRL_APB__GEM2_REF_CTRL__DIVISOR1 {1} \
## CONFIG.PSU__CRL_APB__GEM3_REF_CTRL__SRCSEL {IOPLL} \
## CONFIG.PSU__CRL_APB__GEM3_REF_CTRL__DIVISOR0 {12} \
## CONFIG.PSU__CRL_APB__GEM3_REF_CTRL__DIVISOR1 {1} \
## CONFIG.PSU__CRL_APB__USB0_BUS_REF_CTRL__SRCSEL {IOPLL} \
## CONFIG.PSU__CRL_APB__USB0_BUS_REF_CTRL__DIVISOR0 {6} \
## CONFIG.PSU__CRL_APB__USB0_BUS_REF_CTRL__DIVISOR1 {1} \
## CONFIG.PSU__CRL_APB__USB1_BUS_REF_CTRL__SRCSEL {IOPLL} \
## CONFIG.PSU__CRL_APB__USB1_BUS_REF_CTRL__DIVISOR0 {6} \
## CONFIG.PSU__CRL_APB__USB1_BUS_REF_CTRL__DIVISOR1 {1} \
## CONFIG.PSU__CRL_APB__USB3__ENABLE {1} \
## CONFIG.PSU__CRL_APB__USB3_DUAL_REF_CTRL__SRCSEL {IOPLL} \
## CONFIG.PSU__CRL_APB__USB3_DUAL_REF_CTRL__DIVISOR0 {5} \
## CONFIG.PSU__CRL_APB__USB3_DUAL_REF_CTRL__DIVISOR1 {15} \
## CONFIG.PSU__CRL_APB__QSPI_REF_CTRL__SRCSEL {IOPLL} \
## CONFIG.PSU__CRL_APB__QSPI_REF_CTRL__DIVISOR0 {12} \
## CONFIG.PSU__CRL_APB__QSPI_REF_CTRL__DIVISOR1 {1} \
## CONFIG.PSU__CRL_APB__SDIO0_REF_CTRL__SRCSEL {RPLL} \
## CONFIG.PSU__CRL_APB__SDIO0_REF_CTRL__DIVISOR0 {6} \
## CONFIG.PSU__CRL_APB__SDIO0_REF_CTRL__DIVISOR1 {1} \
## CONFIG.PSU__CRL_APB__SDIO1_REF_CTRL__SRCSEL {RPLL} \
## CONFIG.PSU__CRL_APB__SDIO1_REF_CTRL__DIVISOR0 {6} \
## CONFIG.PSU__CRL_APB__SDIO1_REF_CTRL__DIVISOR1 {1} \
## CONFIG.PSU__CRL_APB__UART0_REF_CTRL__SRCSEL {IOPLL} \
## CONFIG.PSU__CRL_APB__UART0_REF_CTRL__DIVISOR0 {15} \
## CONFIG.PSU__CRL_APB__UART0_REF_CTRL__DIVISOR1 {1} \
## CONFIG.PSU__CRL_APB__UART1_REF_CTRL__SRCSEL {IOPLL} \
## CONFIG.PSU__CRL_APB__UART1_REF_CTRL__DIVISOR0 {15} \
## CONFIG.PSU__CRL_APB__UART1_REF_CTRL__DIVISOR1 {1} \
## CONFIG.PSU__CRL_APB__SPI0_REF_CTRL__SRCSEL {RPLL} \
## CONFIG.PSU__CRL_APB__SPI0_REF_CTRL__DIVISOR0 {6} \
## CONFIG.PSU__CRL_APB__SPI0_REF_CTRL__DIVISOR1 {1} \
## CONFIG.PSU__CRL_APB__SPI1_REF_CTRL__SRCSEL {RPLL} \
## CONFIG.PSU__CRL_APB__SPI1_REF_CTRL__DIVISOR0 {6} \
## CONFIG.PSU__CRL_APB__SPI1_REF_CTRL__DIVISOR1 {1} \
## CONFIG.PSU__CRL_APB__CAN0_REF_CTRL__SRCSEL {IOPLL} \
## CONFIG.PSU__CRL_APB__CAN0_REF_CTRL__DIVISOR0 {15} \
## CONFIG.PSU__CRL_APB__CAN0_REF_CTRL__DIVISOR1 {1} \
## CONFIG.PSU__CRL_APB__CAN1_REF_CTRL__SRCSEL {IOPLL} \
## CONFIG.PSU__CRL_APB__CAN1_REF_CTRL__DIVISOR0 {15} \
## CONFIG.PSU__CRL_APB__CAN1_REF_CTRL__DIVISOR1 {1} \
## CONFIG.PSU__CRL_APB__NAND_REF_CTRL__SRCSEL {IOPLL} \
## CONFIG.PSU__CRL_APB__NAND_REF_CTRL__DIVISOR0 {15} \
## CONFIG.PSU__CRL_APB__NAND_REF_CTRL__DIVISOR1 {1} \
## CONFIG.PSU__CRL_APB__GEM_TSU_REF_CTRL__SRCSEL $gem_tsu_src \
## CONFIG.PSU__CRL_APB__GEM_TSU_REF_CTRL__DIVISOR0 $gem_tsu_div \
## CONFIG.PSU__CRL_APB__GEM_TSU_REF_CTRL__DIVISOR1 {1} \
## CONFIG.PSU__CRL_APB__ADMA_REF_CTRL__SRCSEL {IOPLL} \
## CONFIG.PSU__CRL_APB__ADMA_REF_CTRL__DIVISOR0 {3} \
## CONFIG.PSU__CRL_APB__DBG_LPD_CTRL__SRCSEL {IOPLL} \
## CONFIG.PSU__CRL_APB__DBG_LPD_CTRL__DIVISOR0 {6} \
## CONFIG.PSU__CRL_APB__CPU_R5_CTRL__SRCSEL {IOPLL} \
## CONFIG.PSU__CRL_APB__CPU_R5_CTRL__DIVISOR0 {3} \
## CONFIG.PSU__CRL_APB__CSU_PLL_CTRL__SRCSEL {RPLL} \
## CONFIG.PSU__CRL_APB__CSU_PLL_CTRL__DIVISOR0 {3} \
## CONFIG.PSU__CRL_APB__PCAP_CTRL__SRCSEL {RPLL} \
## CONFIG.PSU__CRL_APB__PCAP_CTRL__DIVISOR0 {6} \
## CONFIG.PSU__CRL_APB__LPD_LSBUS_CTRL__SRCSEL {IOPLL} \
## CONFIG.PSU__CRL_APB__LPD_LSBUS_CTRL__DIVISOR0 {15} \
## CONFIG.PSU__CRL_APB__LPD_SWITCH_CTRL__SRCSEL {IOPLL} \
## CONFIG.PSU__CRL_APB__LPD_SWITCH_CTRL__DIVISOR0 {3} \
## CONFIG.PSU__CRL_APB__I2C0_REF_CTRL__SRCSEL {IOPLL} \
## CONFIG.PSU__CRL_APB__I2C0_REF_CTRL__DIVISOR0 {15} \
## CONFIG.PSU__CRL_APB__I2C0_REF_CTRL__DIVISOR1 {1} \
## CONFIG.PSU__CRL_APB__I2C1_REF_CTRL__SRCSEL {IOPLL} \
## CONFIG.PSU__CRL_APB__I2C1_REF_CTRL__DIVISOR0 {15} \
## CONFIG.PSU__CRL_APB__I2C1_REF_CTRL__DIVISOR1 {1} \
## CONFIG.PSU__CRL_APB__TIMESTAMP_REF_CTRL__SRCSEL {IOPLL} \
## CONFIG.PSU__CRL_APB__TIMESTAMP_REF_CTRL__DIVISOR0 {15} \
## CONFIG.PSU__FPGA_PL0_ENABLE {1} \
## CONFIG.PSU__CRL_APB__PL0_REF_CTRL__SRCSEL {IOPLL} \
## CONFIG.PSU__CRL_APB__PL0_REF_CTRL__DIVISOR0 {15} \
## CONFIG.PSU__CRL_APB__PL0_REF_CTRL__DIVISOR1 {1} \
## CONFIG.PSU__FPGA_PL1_ENABLE {1} \
## CONFIG.PSU__CRL_APB__PL1_REF_CTRL__SRCSEL {IOPLL} \
## CONFIG.PSU__CRL_APB__PL1_REF_CTRL__DIVISOR0 {15} \
## CONFIG.PSU__CRL_APB__PL1_REF_CTRL__DIVISOR1 {4} \
## CONFIG.PSU__FPGA_PL2_ENABLE {1} \
## CONFIG.PSU__CRL_APB__PL2_REF_CTRL__SRCSEL {RPLL} \
## CONFIG.PSU__CRL_APB__PL2_REF_CTRL__DIVISOR0 {4} \
## CONFIG.PSU__CRL_APB__PL2_REF_CTRL__DIVISOR1 {1} \
## CONFIG.PSU__FPGA_PL3_ENABLE {1} \
## CONFIG.PSU__CRL_APB__PL3_REF_CTRL__SRCSEL {RPLL} \
## CONFIG.PSU__CRL_APB__PL3_REF_CTRL__DIVISOR0 {3} \
## CONFIG.PSU__CRL_APB__PL3_REF_CTRL__DIVISOR1 {1} \
## CONFIG.PSU__CRL_APB__AMS_REF_CTRL__SRCSEL {IOPLL} \
## CONFIG.PSU__CRL_APB__AMS_REF_CTRL__DIVISOR0 {29} \
## CONFIG.PSU__CRL_APB__AMS_REF_CTRL__DIVISOR1 {1} \
## ]
## }
# source $scripts_dir/psu_preset_ddr4_auto2133.tcl
## proc set_psu_preset_ddr {IPINST} {
## return [dict create \
## CONFIG.PSU__CRF_APB__DPLL_CTRL__DIV2 {1} \
## CONFIG.PSU__CRF_APB__DPLL_CTRL__FBDIV {64} \
## CONFIG.PSU__CRF_APB__DPLL_TO_LPD_CTRL__DIVISOR0 {3} \
## CONFIG.PSU__CRF_APB__DDR_CTRL__SRCSEL {DPLL} \
## CONFIG.PSU__CRF_APB__DDR_CTRL__DIVISOR0 {2} \
## CONFIG.PSU__DDRC__TRAIN_WRITE_LEVEL {1} \
## CONFIG.PSU__DDRC__TRAIN_READ_GATE {1} \
## CONFIG.PSU__DDRC__TRAIN_DATA_EYE {1} \
## CONFIG.PSU__DDRC__VREF {1} \
## CONFIG.PSU__DDRC__ECC {Disabled} \
## CONFIG.PSU__DDRC__BUS_WIDTH {64 Bit} \
## CONFIG.PSU__DDRC__DRAM_WIDTH {8 Bits} \
## CONFIG.PSU__DDRC__MEMORY_TYPE {DDR 4} \
## CONFIG.PSU__DDRC__SPEED_BIN {DDR4_2133P} \
## CONFIG.PSU__DDRC__FREQ_MHZ {1066.50} \
## CONFIG.PSU__DDRC__DEVICE_CAPACITY {4096 MBits} \
## CONFIG.PSU__DDRC__RANK_ADDR_COUNT {0} \
## CONFIG.PSU__DDRC__BG_ADDR_COUNT {2} \
## CONFIG.PSU__DDRC__BANK_ADDR_COUNT {2} \
## CONFIG.PSU__DDRC__ROW_ADDR_COUNT {15} \
## CONFIG.PSU__DDRC__COL_ADDR_COUNT {10} \
## CONFIG.PSU__DDRC__CL {15} \
## CONFIG.PSU__DDRC__T_RCD {15} \
## CONFIG.PSU__DDRC__T_RP {15} \
## CONFIG.PSU__DDRC__CWL {14} \
## CONFIG.PSU__DDRC__AL {0} \
## CONFIG.PSU__DDRC__T_RC {46.5} \
## CONFIG.PSU__DDRC__T_RAS_MIN {33} \
## CONFIG.PSU__DDRC__T_FAW {21.0} \
## CONFIG.PSU__DDRC__ADDR_MIRROR {0} \
## CONFIG.PSU__DDRC__DDR4_T_REF_MODE {0} \
## CONFIG.PSU__DDRC__DDR4_T_REF_RANGE {Normal (0-85)} \
## CONFIG.PSU__DDRC__PHY_DBI_MODE {0} \
## CONFIG.PSU__DDRC__PARITY_ENABLE {0} \
## CONFIG.PSU__DDRC__CLOCK_STOP_EN {0} \
## CONFIG.PSU__DDRC__DDR4_CAL_MODE_ENABLE {0} \
## CONFIG.PSU__DDRC__DDR4_CRC_CONTROL {0} \
## CONFIG.PSU__DDRC__DDR4_ADDR_MAPPING {0} \
## CONFIG.PSU__DDRC__BRC_MAPPING {ROW_BANK_COL} \
## CONFIG.PSU__DDRC__PER_BANK_REFRESH {0} \
## CONFIG.PSU__DDRC__FGRM {1X} \
## CONFIG.PSU__DDRC__LP_ASR {manual normal} \
## CONFIG.PSU__DDRC__DIMM_ADDR_MIRROR {0} \
## CONFIG.PSU__DDRC__STATIC_RD_MODE {0} \
## CONFIG.PSU__DDRC__SELF_REF_ABORT {0} \
## ]
## }
# source $scripts_dir/build_bd_design.tcl
## namespace eval _tcl {
## proc get_script_folder {} {
##    set script_path [file normalize [info script]]
##    set script_folder [file dirname $script_path]
##    return $script_folder
## }
## }
## variable script_folder
## set script_folder [_tcl::get_script_folder]
## set scripts_vivado_version 2016.3
## set current_vivado_version [version -short]
## if { [string first $scripts_vivado_version $current_vivado_version] == -1 } {
##    puts ""
##    catch {common::send_msg_id "BD_TCL-109" "ERROR" "This script was generated using Vivado <$scripts_vivado_version> and is being run in <$current_vivado_version> of Vivado. Please run the script in Vivado <$scripts_vivado_version> then open the design in Vivado <$current_vivado_version>. Upgrade the design by running \"Tools => Report => Report IP Status...\", then run write_bd_tcl to create an updated script."}
## 
##    return 1
## }
## set list_projs [get_projects -quiet]
## if { $list_projs eq "" } {
##    create_project project_1 myproj -part xczu9eg-ffvb1156-1-i-es1
## }
## set errMsg ""
## set nRet 0
## set cur_design [current_bd_design -quiet]
## set list_cells [get_bd_cells -quiet]
## if { ${design_name} eq "" } {
##    # USE CASES:
##    #    1) Design_name not set
## 
##    set errMsg "Please set the variable <design_name> to a non-empty value."
##    set nRet 1
## 
## } elseif { ${cur_design} ne "" && ${list_cells} eq "" } {
##    # USE CASES:
##    #    2): Current design opened AND is empty AND names same.
##    #    3): Current design opened AND is empty AND names diff; design_name NOT in project.
##    #    4): Current design opened AND is empty AND names diff; design_name exists in project.
## 
##    if { $cur_design ne $design_name } {
##       common::send_msg_id "BD_TCL-001" "INFO" "Changing value of <design_name> from <$design_name> to <$cur_design> since current design is empty."
##       set design_name [get_property NAME $cur_design]
##    }
##    common::send_msg_id "BD_TCL-002" "INFO" "Constructing design in IPI design <$cur_design>..."
## 
## } elseif { ${cur_design} ne "" && $list_cells ne "" && $cur_design eq $design_name } {
##    # USE CASES:
##    #    5) Current design opened AND has components AND same names.
## 
##    set errMsg "Design <$design_name> already exists in your project, please set the variable <design_name> to another value."
##    set nRet 1
## } elseif { [get_files -quiet ${design_name}.bd] ne "" } {
##    # USE CASES: 
##    #    6) Current opened design, has components, but diff names, design_name exists in project.
##    #    7) No opened design, design_name exists in project.
## 
##    set errMsg "Design <$design_name> already exists in your project, please set the variable <design_name> to another value."
##    set nRet 2
## 
## } else {
##    # USE CASES:
##    #    8) No opened design, design_name not in project.
##    #    9) Current opened design, has components, but diff names, design_name not in project.
## 
##    common::send_msg_id "BD_TCL-003" "INFO" "Currently there is no design <$design_name> in project, so creating one..."
## 
##    create_bd_design $design_name
## 
##    common::send_msg_id "BD_TCL-004" "INFO" "Making design <$design_name> as current_bd_design."
##    current_bd_design $design_name
## 
## }
INFO: [BD_TCL-2] Constructing design in IPI design <zcu102_es2_ev>...
## common::send_msg_id "BD_TCL-005" "INFO" "Currently the variable <design_name> is equal to \"$design_name\"."
INFO: [BD_TCL-5] Currently the variable <design_name> is equal to "zcu102_es2_ev".
## if { $nRet != 0 } {
##    catch {common::send_msg_id "BD_TCL-114" "ERROR" $errMsg}
##    return $nRet
## }
## proc create_hier_cell_tpg_input { parentCell nameHier } {
## 
##   variable script_folder
## 
##   if { $parentCell eq "" || $nameHier eq "" } {
##      catch {common::send_msg_id "BD_TCL-102" "ERROR" create_hier_cell_tpg_input() - Empty argument(s)!"}
##      return
##   }
## 
##   # Get object for parentCell
##   set parentObj [get_bd_cells $parentCell]
##   if { $parentObj == "" } {
##      catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
##      return
##   }
## 
##   # Make sure parentObj is hier blk
##   set parentType [get_property TYPE $parentObj]
##   if { $parentType ne "hier" } {
##      catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
##      return
##   }
## 
##   # Save current instance; Restore later
##   set oldCurInst [current_bd_instance .]
## 
##   # Set parent object as current
##   current_bd_instance $parentObj
## 
##   # Create cell and set as current instance
##   set hier_obj [create_bd_cell -type hier $nameHier]
##   current_bd_instance $hier_obj
## 
##   # Create interface pins
##   create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 M_AXI_S2MM
##   create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S_AXI_LITE
##   create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 ctrl
##   create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 ctrl1
## 
##   # Create pins
##   create_bd_pin -dir I -from 0 -to 0 ap_rst_n
##   create_bd_pin -dir I -from 0 -to 0 -type rst aresetn
##   create_bd_pin -dir I -from 0 -to 0 -type clk clk
##   create_bd_pin -dir I -type clk m_axi_s2mm_aclk
##   create_bd_pin -dir O -type intr s2mm_introut
##   create_bd_pin -dir I -type clk s_axi_aclk
## 
##   # Create instance: axi_vdma_2, and set properties
##   set axi_vdma_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_vdma:6.2 axi_vdma_2 ]
##   set_property -dict [ list \
## CONFIG.c_addr_width {36} \
## CONFIG.c_enable_debug_info_11 {1} \
## CONFIG.c_enable_debug_info_15 {1} \
## CONFIG.c_include_mm2s {0} \
## CONFIG.c_include_s2mm_dre {0} \
## CONFIG.c_include_s2mm_sf {0} \
## CONFIG.c_mm2s_genlock_mode {0} \
## CONFIG.c_num_fstores {1} \
## CONFIG.c_s2mm_genlock_mode {2} \
## CONFIG.c_s2mm_linebuffer_depth {4096} \
## CONFIG.c_s2mm_max_burst_length {16} \
## CONFIG.c_s2mm_sof_enable {1} \
##  ] $axi_vdma_2
## 
##   # Create instance: axis_subset_converter_0, and set properties
##   set axis_subset_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_converter_0 ]
##   set_property -dict [ list \
## CONFIG.M_TDATA_NUM_BYTES {2} \
## CONFIG.S_TDATA_NUM_BYTES {3} \
## CONFIG.TDATA_REMAP {tdata[15:0]} \
##  ] $axis_subset_converter_0
## 
##   # Create instance: v_tc_1, and set properties
##   set v_tc_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:v_tc:6.1 v_tc_1 ]
##   set_property -dict [ list \
## CONFIG.GEN_F0_VBLANK_HEND {1920} \
## CONFIG.GEN_F0_VBLANK_HSTART {1920} \
## CONFIG.GEN_F0_VFRAME_SIZE {1125} \
## CONFIG.GEN_F0_VSYNC_HEND {1920} \
## CONFIG.GEN_F0_VSYNC_HSTART {1920} \
## CONFIG.GEN_F0_VSYNC_VEND {1088} \
## CONFIG.GEN_F0_VSYNC_VSTART {1083} \
## CONFIG.GEN_F1_VBLANK_HEND {1920} \
## CONFIG.GEN_F1_VBLANK_HSTART {1920} \
## CONFIG.GEN_F1_VFRAME_SIZE {1125} \
## CONFIG.GEN_F1_VSYNC_HEND {1920} \
## CONFIG.GEN_F1_VSYNC_HSTART {1920} \
## CONFIG.GEN_F1_VSYNC_VEND {1088} \
## CONFIG.GEN_F1_VSYNC_VSTART {1083} \
## CONFIG.GEN_HACTIVE_SIZE {1920} \
## CONFIG.GEN_HFRAME_SIZE {2200} \
## CONFIG.GEN_HSYNC_END {2052} \
## CONFIG.GEN_HSYNC_START {2008} \
## CONFIG.GEN_VACTIVE_SIZE {1080} \
## CONFIG.VIDEO_MODE {1080p} \
## CONFIG.enable_detection {false} \
## CONFIG.horizontal_sync_detection {true} \
## CONFIG.max_clocks_per_line {8192} \
## CONFIG.max_lines_per_frame {8192} \
## CONFIG.vertical_blank_generation {true} \
## CONFIG.vertical_sync_detection {true} \
##  ] $v_tc_1
## 
##   # Create instance: v_tpg_1, and set properties
##   set v_tpg_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:v_tpg:7.0 v_tpg_1 ]
##   set_property -dict [ list \
## CONFIG.HAS_AXI4S_SLAVE {1} \
## CONFIG.MAX_COLS {3840} \
## CONFIG.MAX_ROWS {2160} \
##  ] $v_tpg_1
## 
##   # Create instance: v_vid_in_axi4s_0, and set properties
##   set v_vid_in_axi4s_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:v_vid_in_axi4s:4.0 v_vid_in_axi4s_0 ]
##   set_property -dict [ list \
## CONFIG.C_ADDR_WIDTH {5} \
## CONFIG.C_HAS_ASYNC_CLK {1} \
## CONFIG.C_M_AXIS_VIDEO_FORMAT {2} \
##  ] $v_vid_in_axi4s_0
## 
##   # Create instance: zero_24bit, and set properties
##   set zero_24bit [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 zero_24bit ]
##   set_property -dict [ list \
## CONFIG.CONST_VAL {0} \
## CONFIG.CONST_WIDTH {24} \
##  ] $zero_24bit
## 
##   # Create interface connections
##   connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins S_AXI_LITE] [get_bd_intf_pins axi_vdma_2/S_AXI_LITE]
##   connect_bd_intf_net -intf_net Conn2 [get_bd_intf_pins M_AXI_S2MM] [get_bd_intf_pins axi_vdma_2/M_AXI_S2MM]
##   connect_bd_intf_net -intf_net axi_interconnect_gp0_M00_AXI [get_bd_intf_pins ctrl1] [get_bd_intf_pins v_tc_1/ctrl]
##   connect_bd_intf_net -intf_net axi_interconnect_gp0_M04_AXI [get_bd_intf_pins ctrl] [get_bd_intf_pins v_tpg_1/s_axi_CTRL]
##   connect_bd_intf_net -intf_net axis_subset_converter_0_M_AXIS [get_bd_intf_pins axi_vdma_2/S_AXIS_S2MM] [get_bd_intf_pins axis_subset_converter_0/M_AXIS]
##   connect_bd_intf_net -intf_net v_tpg_1_m_axis_video [get_bd_intf_pins axis_subset_converter_0/S_AXIS] [get_bd_intf_pins v_tpg_1/m_axis_video]
##   connect_bd_intf_net -intf_net v_vid_in_axi4s_0_video_out [get_bd_intf_pins v_tpg_1/s_axis_video] [get_bd_intf_pins v_vid_in_axi4s_0/video_out]
## 
##   # Create port connections
##   connect_bd_net -net ap_rst_n_1 [get_bd_pins ap_rst_n] [get_bd_pins v_tpg_1/ap_rst_n]
##   connect_bd_net -net aresetn_1 [get_bd_pins aresetn] [get_bd_pins axis_subset_converter_0/aresetn]
##   connect_bd_net -net axi_vdma_3_s2mm_introut [get_bd_pins s2mm_introut] [get_bd_pins axi_vdma_2/s2mm_introut]
##   connect_bd_net -net clk_50mhz [get_bd_pins s_axi_aclk] [get_bd_pins axi_vdma_2/s_axi_lite_aclk] [get_bd_pins v_tc_1/s_axi_aclk]
##   connect_bd_net -net fmc_hdmi_input_clk_out [get_bd_pins clk] [get_bd_pins v_tc_1/clk] [get_bd_pins v_vid_in_axi4s_0/vid_io_in_clk]
##   connect_bd_net -net m_axi_s2mm_aclk_1 [get_bd_pins m_axi_s2mm_aclk] [get_bd_pins axi_vdma_2/m_axi_s2mm_aclk] [get_bd_pins axi_vdma_2/s_axis_s2mm_aclk] [get_bd_pins axis_subset_converter_0/aclk] [get_bd_pins v_tpg_1/ap_clk] [get_bd_pins v_vid_in_axi4s_0/aclk]
##   connect_bd_net -net v_tc_1_active_video_out [get_bd_pins v_tc_1/active_video_out] [get_bd_pins v_vid_in_axi4s_0/vid_active_video]
##   connect_bd_net -net v_tc_1_hblank_out [get_bd_pins v_tc_1/hblank_out] [get_bd_pins v_vid_in_axi4s_0/vid_hblank]
##   connect_bd_net -net v_tc_1_hsync_out [get_bd_pins v_tc_1/hsync_out] [get_bd_pins v_vid_in_axi4s_0/vid_hsync]
##   connect_bd_net -net v_tc_1_vblank_out [get_bd_pins v_tc_1/vblank_out] [get_bd_pins v_vid_in_axi4s_0/vid_vblank]
##   connect_bd_net -net v_tc_1_vsync_out [get_bd_pins v_tc_1/vsync_out] [get_bd_pins v_vid_in_axi4s_0/vid_vsync]
##   connect_bd_net -net zero_24bit_dout [get_bd_pins v_vid_in_axi4s_0/vid_data] [get_bd_pins zero_24bit/dout]
## 
##   # Restore current instance
##   current_bd_instance $oldCurInst
## }
## proc create_hier_cell_si570_clk { parentCell nameHier } {
## 
##   variable script_folder
## 
##   if { $parentCell eq "" || $nameHier eq "" } {
##      catch {common::send_msg_id "BD_TCL-102" "ERROR" create_hier_cell_si570_clk() - Empty argument(s)!"}
##      return
##   }
## 
##   # Get object for parentCell
##   set parentObj [get_bd_cells $parentCell]
##   if { $parentObj == "" } {
##      catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
##      return
##   }
## 
##   # Make sure parentObj is hier blk
##   set parentType [get_property TYPE $parentObj]
##   if { $parentType ne "hier" } {
##      catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
##      return
##   }
## 
##   # Save current instance; Restore later
##   set oldCurInst [current_bd_instance .]
## 
##   # Set parent object as current
##   current_bd_instance $parentObj
## 
##   # Create cell and set as current instance
##   set hier_obj [create_bd_cell -type hier $nameHier]
##   current_bd_instance $hier_obj
## 
##   # Create interface pins
##   create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 CLK_IN_D
## 
##   # Create pins
##   create_bd_pin -dir O -from 0 -to 0 BUFG_O
## 
##   # Create instance: util_ds_buf_0, and set properties
##   set util_ds_buf_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.1 util_ds_buf_0 ]
##   set_property -dict [ list \
## CONFIG.C_BUF_TYPE {IBUFDSGTE} \
##  ] $util_ds_buf_0
## 
##   # Create instance: util_ds_buf_1, and set properties
##   set util_ds_buf_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.1 util_ds_buf_1 ]
##   set_property -dict [ list \
## CONFIG.C_BUF_TYPE {BUFG_GT} \
##  ] $util_ds_buf_1
## 
##   # Create instance: xlconstant_vcc, and set properties
##   set xlconstant_vcc [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_vcc ]
## 
##   # Create interface connections
##   connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins CLK_IN_D] [get_bd_intf_pins util_ds_buf_0/CLK_IN_D]
## 
##   # Create port connections
##   connect_bd_net -net util_ds_buf_0_IBUF_DS_ODIV2 [get_bd_pins util_ds_buf_0/IBUF_DS_ODIV2] [get_bd_pins util_ds_buf_1/BUFG_GT_I]
##   connect_bd_net -net util_ds_buf_1_BUFG_GT_O [get_bd_pins BUFG_O] [get_bd_pins util_ds_buf_1/BUFG_GT_O]
##   connect_bd_net -net xlconstant_0_dout [get_bd_pins util_ds_buf_1/BUFG_GT_CE] [get_bd_pins xlconstant_vcc/dout]
## 
##   # Restore current instance
##   current_bd_instance $oldCurInst
## }
## proc create_hier_cell_gpio { parentCell nameHier } {
## 
##   variable script_folder
## 
##   if { $parentCell eq "" || $nameHier eq "" } {
##      catch {common::send_msg_id "BD_TCL-102" "ERROR" create_hier_cell_gpio() - Empty argument(s)!"}
##      return
##   }
## 
##   # Get object for parentCell
##   set parentObj [get_bd_cells $parentCell]
##   if { $parentObj == "" } {
##      catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
##      return
##   }
## 
##   # Make sure parentObj is hier blk
##   set parentType [get_property TYPE $parentObj]
##   if { $parentType ne "hier" } {
##      catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
##      return
##   }
## 
##   # Save current instance; Restore later
##   set oldCurInst [current_bd_instance .]
## 
##   # Set parent object as current
##   current_bd_instance $parentObj
## 
##   # Create cell and set as current instance
##   set hier_obj [create_bd_cell -type hier $nameHier]
##   current_bd_instance $hier_obj
## 
##   # Create interface pins
## 
##   # Create pins
##   create_bd_pin -dir I -from 94 -to 0 Din
##   create_bd_pin -dir O -from 0 -to 0 iic_rst_b
##   create_bd_pin -dir O -from 0 -to 0 tpg_rst_n
## 
##   # Create instance: iic_rst_b, and set properties
##   set iic_rst_b [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 iic_rst_b ]
##   set_property -dict [ list \
## CONFIG.DIN_FROM {0} \
## CONFIG.DIN_TO {0} \
## CONFIG.DIN_WIDTH {95} \
##  ] $iic_rst_b
## 
##   # Create instance: tpg_rst_gpio, and set properties
##   set tpg_rst_gpio [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 tpg_rst_gpio ]
##   set_property -dict [ list \
## CONFIG.DIN_FROM {1} \
## CONFIG.DIN_TO {1} \
## CONFIG.DIN_WIDTH {95} \
## CONFIG.DOUT_WIDTH {1} \
##  ] $tpg_rst_gpio
## 
##   # Create port connections
##   connect_bd_net -net tpg_rst_gpio_Dout [get_bd_pins tpg_rst_n] [get_bd_pins tpg_rst_gpio/Dout]
##   connect_bd_net -net xlslice_0_Dout [get_bd_pins iic_rst_b] [get_bd_pins iic_rst_b/Dout]
##   connect_bd_net -net zynq_ultra_ps_e_0_emio_gpio_o [get_bd_pins Din] [get_bd_pins iic_rst_b/Din] [get_bd_pins tpg_rst_gpio/Din]
## 
##   # Restore current instance
##   current_bd_instance $oldCurInst
## }
## proc create_hier_cell_fmc_hdmi_input { parentCell nameHier } {
## 
##   variable script_folder
## 
##   if { $parentCell eq "" || $nameHier eq "" } {
##      catch {common::send_msg_id "BD_TCL-102" "ERROR" create_hier_cell_fmc_hdmi_input() - Empty argument(s)!"}
##      return
##   }
## 
##   # Get object for parentCell
##   set parentObj [get_bd_cells $parentCell]
##   if { $parentObj == "" } {
##      catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
##      return
##   }
## 
##   # Make sure parentObj is hier blk
##   set parentType [get_property TYPE $parentObj]
##   if { $parentType ne "hier" } {
##      catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
##      return
##   }
## 
##   # Save current instance; Restore later
##   set oldCurInst [current_bd_instance .]
## 
##   # Set parent object as current
##   current_bd_instance $parentObj
## 
##   # Create cell and set as current instance
##   set hier_obj [create_bd_cell -type hier $nameHier]
##   current_bd_instance $hier_obj
## 
##   # Create interface pins
##   create_bd_intf_pin -mode Slave -vlnv avnet.com:interface:avnet_hdmi_rtl:1.0 IO_HDMII
##   create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 M_AXI_S2MM
##   create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S_AXI_LITE
## 
##   # Create pins
##   create_bd_pin -dir I -type clk clk_50mhz
##   create_bd_pin -dir I -type clk m_axi_s2mm_aclk
##   create_bd_pin -dir O -type intr s2mm_introut
##   create_bd_pin -dir I video_clk_2
## 
##   # Create instance: avnet_hdmi_in_0, and set properties
##   set avnet_hdmi_in_0 [ create_bd_cell -type ip -vlnv avnet:avnet_hdmi:avnet_hdmi_in:3.1 avnet_hdmi_in_0 ]
## 
##   # Create instance: axi_vdma_1, and set properties
##   set axi_vdma_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_vdma:6.2 axi_vdma_1 ]
##   set_property -dict [ list \
## CONFIG.c_addr_width {36} \
## CONFIG.c_enable_debug_info_11 {1} \
## CONFIG.c_enable_debug_info_15 {1} \
## CONFIG.c_include_mm2s {0} \
## CONFIG.c_include_s2mm_dre {0} \
## CONFIG.c_include_s2mm_sf {0} \
## CONFIG.c_mm2s_genlock_mode {0} \
## CONFIG.c_num_fstores {1} \
## CONFIG.c_s2mm_genlock_mode {2} \
## CONFIG.c_s2mm_linebuffer_depth {4096} \
## CONFIG.c_s2mm_max_burst_length {16} \
## CONFIG.c_s2mm_sof_enable {1} \
##  ] $axi_vdma_1
## 
##   # Create instance: v_vid_in_axi4s_1, and set properties
##   set v_vid_in_axi4s_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:v_vid_in_axi4s:4.0 v_vid_in_axi4s_1 ]
##   set_property -dict [ list \
## CONFIG.C_HAS_ASYNC_CLK {1} \
## CONFIG.C_M_AXIS_VIDEO_FORMAT {0} \
##  ] $v_vid_in_axi4s_1
## 
##   # Create interface connections
##   connect_bd_intf_net -intf_net Conn2 [get_bd_intf_pins M_AXI_S2MM] [get_bd_intf_pins axi_vdma_1/M_AXI_S2MM]
##   connect_bd_intf_net -intf_net Conn3 [get_bd_intf_pins S_AXI_LITE] [get_bd_intf_pins axi_vdma_1/S_AXI_LITE]
##   connect_bd_intf_net -intf_net IO_HDMII_1 [get_bd_intf_pins IO_HDMII] [get_bd_intf_pins avnet_hdmi_in_0/IO_HDMII]
##   connect_bd_intf_net -intf_net avnet_hdmi_in_0_VID_IO_OUT [get_bd_intf_pins avnet_hdmi_in_0/VID_IO_OUT] [get_bd_intf_pins v_vid_in_axi4s_1/vid_io_in]
##   connect_bd_intf_net -intf_net v_vid_in_axi4s_1_video_out [get_bd_intf_pins axi_vdma_1/S_AXIS_S2MM] [get_bd_intf_pins v_vid_in_axi4s_1/video_out]
## 
##   # Create port connections
##   connect_bd_net -net axi_vdma_1_s2mm_introut [get_bd_pins s2mm_introut] [get_bd_pins axi_vdma_1/s2mm_introut]
##   connect_bd_net -net clk_75mhz [get_bd_pins clk_50mhz] [get_bd_pins axi_vdma_1/s_axi_lite_aclk]
##   connect_bd_net -net m_axi_s2mm_aclk_1 [get_bd_pins m_axi_s2mm_aclk] [get_bd_pins axi_vdma_1/m_axi_s2mm_aclk] [get_bd_pins axi_vdma_1/s_axis_s2mm_aclk] [get_bd_pins v_vid_in_axi4s_1/aclk]
##   connect_bd_net -net vtiming_mux_0_video_clk [get_bd_pins video_clk_2] [get_bd_pins avnet_hdmi_in_0/clk] [get_bd_pins v_vid_in_axi4s_1/vid_io_in_clk]
## 
##   # Restore current instance
##   current_bd_instance $oldCurInst
## }
## proc create_root_design { parentCell } {
## 
##   variable script_folder
## 
##   if { $parentCell eq "" } {
##      set parentCell [get_bd_cells /]
##   }
## 
##   # Get object for parentCell
##   set parentObj [get_bd_cells $parentCell]
##   if { $parentObj == "" } {
##      catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
##      return
##   }
## 
##   # Make sure parentObj is hier blk
##   set parentType [get_property TYPE $parentObj]
##   if { $parentType ne "hier" } {
##      catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
##      return
##   }
## 
##   # Save current instance; Restore later
##   set oldCurInst [current_bd_instance .]
## 
##   # Set parent object as current
##   current_bd_instance $parentObj
## 
## 
##   # Create interface ports
##   set fmc_imageon_hdmii [ create_bd_intf_port -mode Slave -vlnv avnet.com:interface:avnet_hdmi_rtl:1.0 fmc_imageon_hdmii ]
##   set fmc_imageon_iic [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:iic_rtl:1.0 fmc_imageon_iic ]
##   set si570 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 si570 ]
## 
##   # Create ports
## if {$::silicon == "es1"} {
##   set dp_aux_data_in [ create_bd_port -dir I dp_aux_data_in ]
##   set dp_aux_data_oe [ create_bd_port -dir O -from 0 -to 0 dp_aux_data_oe ]
##   set dp_aux_data_out [ create_bd_port -dir O dp_aux_data_out ]
##   set dp_hot_plug_detect [ create_bd_port -dir I dp_hot_plug_detect ]
## }
##   set fmc_imageon_hdmii_clk [ create_bd_port -dir I -type clk fmc_imageon_hdmii_clk ]
##   set_property -dict [ list \
## CONFIG.FREQ_HZ {148500000} \
##  ] $fmc_imageon_hdmii_clk
##   set fmc_imageon_iic_rst_b [ create_bd_port -dir O -from 0 -to 0 fmc_imageon_iic_rst_b ]
## 
##   # Create instance: axi_iic_1, and set properties
##   set axi_iic_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_iic:2.0 axi_iic_1 ]
## 
##   # Create instance: axi_interconnect_hp1, and set properties
##   set axi_interconnect_hp1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_hp1 ]
##   set_property -dict [ list \
## CONFIG.ENABLE_ADVANCED_OPTIONS {0} \
## CONFIG.M00_HAS_DATA_FIFO {2} \
## CONFIG.M00_HAS_REGSLICE {1} \
## CONFIG.NUM_MI {1} \
## CONFIG.NUM_SI {2} \
## CONFIG.S00_HAS_DATA_FIFO {2} \
## CONFIG.S00_HAS_REGSLICE {1} \
## CONFIG.S01_HAS_DATA_FIFO {2} \
## CONFIG.S01_HAS_REGSLICE {1} \
## CONFIG.S02_HAS_DATA_FIFO {2} \
## CONFIG.STRATEGY {2} \
##  ] $axi_interconnect_hp1
## 
##   # Create instance: axi_interconnect_hpm0, and set properties
##   set axi_interconnect_hpm0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_hpm0 ]
##   set_property -dict [ list \
## CONFIG.NUM_MI {5} \
##  ] $axi_interconnect_hpm0
## 
##   # Create instance: clk_wiz_1, and set properties
##   set clk_wiz_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:clk_wiz:5.3 clk_wiz_1 ]
##   set_property -dict [ list \
## CONFIG.CLKIN1_JITTER_PS {33.330000000000005} \
## CONFIG.CLKOUT1_DRIVES {Buffer} \
## CONFIG.CLKOUT1_JITTER {116.415} \
## CONFIG.CLKOUT1_PHASE_ERROR {77.836} \
## CONFIG.CLKOUT1_REQUESTED_OUT_FREQ {50.000} \
## CONFIG.CLKOUT2_DRIVES {Buffer} \
## CONFIG.CLKOUT2_JITTER {107.379} \
## CONFIG.CLKOUT2_PHASE_ERROR {77.836} \
## CONFIG.CLKOUT2_REQUESTED_OUT_FREQ {75.000} \
## CONFIG.CLKOUT2_USED {true} \
## CONFIG.CLKOUT3_DRIVES {Buffer} \
## CONFIG.CLKOUT3_JITTER {93.717} \
## CONFIG.CLKOUT3_PHASE_ERROR {77.836} \
## CONFIG.CLKOUT3_REQUESTED_OUT_FREQ {150.000} \
## CONFIG.CLKOUT3_USED {true} \
## CONFIG.CLKOUT4_DRIVES {Buffer} \
## CONFIG.CLKOUT4_JITTER {81.814} \
## CONFIG.CLKOUT4_PHASE_ERROR {77.836} \
## CONFIG.CLKOUT4_REQUESTED_OUT_FREQ {300.000} \
## CONFIG.CLKOUT4_USED {true} \
## CONFIG.CLKOUT5_DRIVES {Buffer} \
## CONFIG.CLKOUT6_DRIVES {Buffer} \
## CONFIG.CLKOUT7_DRIVES {Buffer} \
## CONFIG.MMCM_CLKFBOUT_MULT_F {4.000} \
## CONFIG.MMCM_CLKIN1_PERIOD {3.333} \
## CONFIG.MMCM_CLKIN2_PERIOD {10.0} \
## CONFIG.MMCM_CLKOUT0_DIVIDE_F {24.000} \
## CONFIG.MMCM_CLKOUT1_DIVIDE {16} \
## CONFIG.MMCM_CLKOUT2_DIVIDE {8} \
## CONFIG.MMCM_CLKOUT3_DIVIDE {4} \
## CONFIG.MMCM_DIVCLK_DIVIDE {1} \
## CONFIG.NUM_OUT_CLKS {4} \
## CONFIG.PHASESHIFT_MODE {LATENCY} \
## CONFIG.PRIM_IN_FREQ {300.000} \
## CONFIG.PRIM_SOURCE {No_buffer} \
## CONFIG.USE_INCLK_SWITCHOVER {false} \
## CONFIG.USE_RESET {false} \
##  ] $clk_wiz_1
## 
## if {$::silicon == "es1"} {
##   # Create instance: dp_aux_data_oe_n_invert, and set properties
##   set dp_aux_data_oe_n_invert [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 dp_aux_data_oe_n_invert ]
##   set_property -dict [ list \
## CONFIG.C_OPERATION {not} \
## CONFIG.C_SIZE {1} \
##  ] $dp_aux_data_oe_n_invert
## }
## 
##   # Create instance: fmc_hdmi_input
##   create_hier_cell_fmc_hdmi_input [current_bd_instance .] fmc_hdmi_input
## 
##   # Create instance: gpio
##   create_hier_cell_gpio [current_bd_instance .] gpio
## 
##   # Create instance: interrupts, and set properties
##   set interrupts [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 interrupts ]
##   set_property -dict [ list \
## CONFIG.NUM_PORTS {3} \
##  ] $interrupts
## 
##   # Create instance: proc_sys_reset_clk50, and set properties
##   set proc_sys_reset_clk50 [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 proc_sys_reset_clk50 ]
##   set_property -dict [ list \
## CONFIG.C_AUX_RESET_HIGH {0} \
##  ] $proc_sys_reset_clk50
## 
##   # Create instance: proc_sys_reset_clk75, and set properties
##   set proc_sys_reset_clk75 [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 proc_sys_reset_clk75 ]
##   set_property -dict [ list \
## CONFIG.C_AUX_RESET_HIGH {0} \
##  ] $proc_sys_reset_clk75
## 
##   # Create instance: proc_sys_reset_clk150, and set properties
##   set proc_sys_reset_clk150 [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 proc_sys_reset_clk150 ]
##   set_property -dict [ list \
## CONFIG.C_AUX_RESET_HIGH {0} \
##  ] $proc_sys_reset_clk150
## 
##   # Create instance: proc_sys_reset_clk300, and set properties
##   set proc_sys_reset_clk300 [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 proc_sys_reset_clk300 ]
##   set_property -dict [ list \
## CONFIG.C_AUX_RESET_HIGH {0} \
##  ] $proc_sys_reset_clk300
## 
##   # Create instance: si570_clk
##   create_hier_cell_si570_clk [current_bd_instance .] si570_clk
## 
##   # Create instance: tpg_input
##   create_hier_cell_tpg_input [current_bd_instance .] tpg_input
## 
##   # Create instance: zynq_ultra_ps_e_0, and set properties
##   set zynq_ultra_ps_e_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:zynq_ultra_ps_e:2.0 zynq_ultra_ps_e_0 ]
##   set_property -dict [ set_psu_preset_board $zynq_ultra_ps_e_0 ] $zynq_ultra_ps_e_0
##   set_property -dict [ set_psu_preset_clk $zynq_ultra_ps_e_0 ] $zynq_ultra_ps_e_0
##   set_property -dict [ set_psu_preset_ddr $zynq_ultra_ps_e_0 ] $zynq_ultra_ps_e_0
## 
##   # Create interface connections
##   connect_bd_intf_net -intf_net CLK_IN_D_1 [get_bd_intf_ports si570] [get_bd_intf_pins si570_clk/CLK_IN_D]
##   connect_bd_intf_net -intf_net IO_HDMII_1 [get_bd_intf_ports fmc_imageon_hdmii] [get_bd_intf_pins fmc_hdmi_input/IO_HDMII]
##   connect_bd_intf_net -intf_net S00_AXI_2 [get_bd_intf_pins axi_interconnect_hp1/S00_AXI] [get_bd_intf_pins fmc_hdmi_input/M_AXI_S2MM]
##   connect_bd_intf_net -intf_net axi_iic_0_IIC [get_bd_intf_ports fmc_imageon_iic] [get_bd_intf_pins axi_iic_1/IIC]
##   connect_bd_intf_net -intf_net axi_interconnect_gp0_M00_AXI [get_bd_intf_pins axi_interconnect_hpm0/M00_AXI] [get_bd_intf_pins tpg_input/ctrl1]
##   connect_bd_intf_net -intf_net axi_interconnect_gp0_M01_AXI [get_bd_intf_pins axi_interconnect_hpm0/M01_AXI] [get_bd_intf_pins fmc_hdmi_input/S_AXI_LITE]
##   connect_bd_intf_net -intf_net axi_interconnect_gp0_M02_AXI [get_bd_intf_pins axi_iic_1/S_AXI] [get_bd_intf_pins axi_interconnect_hpm0/M02_AXI]
##   connect_bd_intf_net -intf_net axi_interconnect_gp0_M04_AXI [get_bd_intf_pins axi_interconnect_hpm0/M04_AXI] [get_bd_intf_pins tpg_input/ctrl]
##   connect_bd_intf_net -intf_net axi_interconnect_hp0_M00_AXI [get_bd_intf_pins axi_interconnect_hp1/M00_AXI] [get_bd_intf_pins zynq_ultra_ps_e_0/S_AXI_HP1_FPD]
##   connect_bd_intf_net -intf_net axi_interconnect_hpm0_M03_AXI [get_bd_intf_pins axi_interconnect_hpm0/M03_AXI] [get_bd_intf_pins tpg_input/S_AXI_LITE]
##   connect_bd_intf_net -intf_net tpg_input_M_AXI_S2MM [get_bd_intf_pins axi_interconnect_hp1/S01_AXI] [get_bd_intf_pins tpg_input/M_AXI_S2MM]
##   connect_bd_intf_net -intf_net zynq_ultra_ps_e_0_M_AXI_HPM0_FPD [get_bd_intf_pins axi_interconnect_hpm0/S00_AXI] [get_bd_intf_pins zynq_ultra_ps_e_0/M_AXI_HPM0_FPD]
## 
##   # Create port connections
##   connect_bd_net -net M06_ARESETN_1 [get_bd_pins axi_interconnect_hp1/M00_ARESETN] [get_bd_pins axi_interconnect_hp1/S00_ARESETN] [get_bd_pins axi_interconnect_hp1/S01_ARESETN] [get_bd_pins axi_interconnect_hpm0/M04_ARESETN] [get_bd_pins proc_sys_reset_clk300/peripheral_aresetn] [get_bd_pins tpg_input/aresetn]
##   connect_bd_net -net axi_iic_1_iic2intc_irpt [get_bd_pins axi_iic_1/iic2intc_irpt] [get_bd_pins interrupts/In1]
##   connect_bd_net -net clk_150mhz [get_bd_pins axi_interconnect_hp1/ACLK] [get_bd_pins axi_interconnect_hp1/M00_ACLK] [get_bd_pins axi_interconnect_hp1/S00_ACLK] [get_bd_pins axi_interconnect_hp1/S01_ACLK] [get_bd_pins axi_interconnect_hpm0/M04_ACLK] [get_bd_pins clk_wiz_1/clk_out4] [get_bd_pins fmc_hdmi_input/m_axi_s2mm_aclk] [get_bd_pins proc_sys_reset_clk300/slowest_sync_clk] [get_bd_pins tpg_input/m_axi_s2mm_aclk] [get_bd_pins zynq_ultra_ps_e_0/saxihp1_fpd_aclk]
##   connect_bd_net -net clk_50mhz [get_bd_pins axi_iic_1/s_axi_aclk] [get_bd_pins axi_interconnect_hpm0/ACLK] [get_bd_pins axi_interconnect_hpm0/M00_ACLK] [get_bd_pins axi_interconnect_hpm0/M01_ACLK] [get_bd_pins axi_interconnect_hpm0/M02_ACLK] [get_bd_pins axi_interconnect_hpm0/M03_ACLK] [get_bd_pins axi_interconnect_hpm0/S00_ACLK] [get_bd_pins clk_wiz_1/clk_out1] [get_bd_pins fmc_hdmi_input/clk_50mhz] [get_bd_pins proc_sys_reset_clk50/slowest_sync_clk] [get_bd_pins tpg_input/s_axi_aclk] [get_bd_pins zynq_ultra_ps_e_0/maxihpm0_fpd_aclk]
##   connect_bd_net -net clk_wiz_1_clk_out2 [get_bd_pins clk_wiz_1/clk_out2] [get_bd_pins proc_sys_reset_clk75/slowest_sync_clk]
##   connect_bd_net -net clk_wiz_1_clk_out3 [get_bd_pins clk_wiz_1/clk_out3] [get_bd_pins proc_sys_reset_clk150/slowest_sync_clk]
##   connect_bd_net -net clk_wiz_1_locked [get_bd_pins clk_wiz_1/locked] [get_bd_pins proc_sys_reset_clk150/dcm_locked] [get_bd_pins proc_sys_reset_clk300/dcm_locked] [get_bd_pins proc_sys_reset_clk50/dcm_locked] [get_bd_pins proc_sys_reset_clk75/dcm_locked]
## if {$::silicon == "es1"} {
##   connect_bd_net -net dp_aux_data_in_1 [get_bd_ports dp_aux_data_in] [get_bd_pins zynq_ultra_ps_e_0/dp_aux_data_in]
##   connect_bd_net -net dp_aux_data_oe_n_invert_Res [get_bd_ports dp_aux_data_oe] [get_bd_pins dp_aux_data_oe_n_invert/Res]
##   connect_bd_net -net dp_hot_plug_detect_1 [get_bd_ports dp_hot_plug_detect] [get_bd_pins zynq_ultra_ps_e_0/dp_hot_plug_detect]
## }
##   connect_bd_net -net fmc_hdmi_input_s2mm_introut [get_bd_pins fmc_hdmi_input/s2mm_introut] [get_bd_pins interrupts/In2]
##   connect_bd_net -net fmc_imageon_hdmii_clk_1 [get_bd_ports fmc_imageon_hdmii_clk] [get_bd_pins fmc_hdmi_input/video_clk_2]
##   connect_bd_net -net gpio_Dout [get_bd_pins proc_sys_reset_clk150/ext_reset_in] [get_bd_pins proc_sys_reset_clk300/ext_reset_in] [get_bd_pins proc_sys_reset_clk50/ext_reset_in] [get_bd_pins proc_sys_reset_clk75/ext_reset_in] [get_bd_pins zynq_ultra_ps_e_0/pl_resetn0]
##   connect_bd_net -net gpio_Dout1 [get_bd_pins gpio/tpg_rst_n] [get_bd_pins tpg_input/ap_rst_n]
##   connect_bd_net -net interrupts_dout [get_bd_pins interrupts/dout] [get_bd_pins zynq_ultra_ps_e_0/pl_ps_irq0]
##   connect_bd_net -net proc_sys_reset_clk150_interconnect_aresetn [get_bd_pins axi_interconnect_hp1/ARESETN] [get_bd_pins proc_sys_reset_clk300/interconnect_aresetn]
##   connect_bd_net -net proc_sys_reset_clk50_interconnect_aresetn [get_bd_pins axi_interconnect_hpm0/ARESETN] [get_bd_pins proc_sys_reset_clk50/interconnect_aresetn]
##   connect_bd_net -net proc_sys_reset_clk50_peripheral_aresetn [get_bd_pins axi_iic_1/s_axi_aresetn] [get_bd_pins axi_interconnect_hpm0/M00_ARESETN] [get_bd_pins axi_interconnect_hpm0/M01_ARESETN] [get_bd_pins axi_interconnect_hpm0/M02_ARESETN] [get_bd_pins axi_interconnect_hpm0/M03_ARESETN] [get_bd_pins axi_interconnect_hpm0/S00_ARESETN] [get_bd_pins proc_sys_reset_clk50/peripheral_aresetn]
##   connect_bd_net -net tpg_input_s2mm_introut [get_bd_pins interrupts/In0] [get_bd_pins tpg_input/s2mm_introut]
##   connect_bd_net -net video_clk_1 [get_bd_pins si570_clk/BUFG_O] [get_bd_pins tpg_input/clk] [get_bd_pins zynq_ultra_ps_e_0/dp_video_in_clk]
##   connect_bd_net -net xlslice_0_Dout [get_bd_ports fmc_imageon_iic_rst_b] [get_bd_pins gpio/iic_rst_b]
## if {$::silicon == "es1"} {
##   connect_bd_net -net zynq_ultra_ps_e_0_dp_aux_data_oe_n [get_bd_pins dp_aux_data_oe_n_invert/Op1] [get_bd_pins zynq_ultra_ps_e_0/dp_aux_data_oe_n]
##   connect_bd_net -net zynq_ultra_ps_e_0_dp_aux_data_out [get_bd_ports dp_aux_data_out] [get_bd_pins zynq_ultra_ps_e_0/dp_aux_data_out]
## }
##   connect_bd_net -net zynq_ultra_ps_e_0_emio_gpio_o [get_bd_pins gpio/Din] [get_bd_pins zynq_ultra_ps_e_0/emio_gpio_o]
##   connect_bd_net -net zynq_ultra_ps_e_0_pl_clk2 [get_bd_pins clk_wiz_1/clk_in1] [get_bd_pins zynq_ultra_ps_e_0/pl_clk2]
## 
##   # Create address segments
##   create_bd_addr_seg -range 0x00010000 -offset 0xA1600000 [get_bd_addr_spaces zynq_ultra_ps_e_0/Data] [get_bd_addr_segs axi_iic_1/S_AXI/Reg] SEG_axi_iic_1_Reg
##   create_bd_addr_seg -range 0x00010000 -offset 0xA3000000 [get_bd_addr_spaces zynq_ultra_ps_e_0/Data] [get_bd_addr_segs fmc_hdmi_input/axi_vdma_1/S_AXI_LITE/Reg] SEG_axi_vdma_1_Reg
##   create_bd_addr_seg -range 0x00010000 -offset 0xA3020000 [get_bd_addr_spaces zynq_ultra_ps_e_0/Data] [get_bd_addr_segs tpg_input/axi_vdma_2/S_AXI_LITE/Reg] SEG_axi_vdma_3_Reg
##   create_bd_addr_seg -range 0x00010000 -offset 0xA3C20000 [get_bd_addr_spaces zynq_ultra_ps_e_0/Data] [get_bd_addr_segs tpg_input/v_tc_1/ctrl/Reg] SEG_v_tc_1_Reg
##   create_bd_addr_seg -range 0x00010000 -offset 0xA3C30000 [get_bd_addr_spaces zynq_ultra_ps_e_0/Data] [get_bd_addr_segs tpg_input/v_tpg_1/s_axi_CTRL/Reg] SEG_v_tpg_1_Reg
##   create_bd_addr_seg -range 0x80000000 -offset 0x000800000000 [get_bd_addr_spaces fmc_hdmi_input/axi_vdma_1/Data_S2MM] [get_bd_addr_segs zynq_ultra_ps_e_0/SAXIGP3/HP1_DDR_HIGH] SEG_zynq_ultra_ps_e_0_HP1_DDR_HIGH
##   create_bd_addr_seg -range 0x80000000 -offset 0x00000000 [get_bd_addr_spaces fmc_hdmi_input/axi_vdma_1/Data_S2MM] [get_bd_addr_segs zynq_ultra_ps_e_0/SAXIGP3/HP1_DDR_LOW] SEG_zynq_ultra_ps_e_0_HP1_DDR_LOW
##   create_bd_addr_seg -range 0x00040000 -offset 0xFFFC0000 [get_bd_addr_spaces fmc_hdmi_input/axi_vdma_1/Data_S2MM] [get_bd_addr_segs zynq_ultra_ps_e_0/SAXIGP3/HP1_LPS_OCM] SEG_zynq_ultra_ps_e_0_HP1_LPS_OCM
##   create_bd_addr_seg -range 0x20000000 -offset 0xC0000000 [get_bd_addr_spaces fmc_hdmi_input/axi_vdma_1/Data_S2MM] [get_bd_addr_segs zynq_ultra_ps_e_0/SAXIGP3/HP1_QSPI] SEG_zynq_ultra_ps_e_0_HP1_QSPI
##   create_bd_addr_seg -range 0x80000000 -offset 0x000800000000 [get_bd_addr_spaces tpg_input/axi_vdma_2/Data_S2MM] [get_bd_addr_segs zynq_ultra_ps_e_0/SAXIGP3/HP1_DDR_HIGH] SEG_zynq_ultra_ps_e_0_HP1_DDR_HIGH
##   create_bd_addr_seg -range 0x80000000 -offset 0x00000000 [get_bd_addr_spaces tpg_input/axi_vdma_2/Data_S2MM] [get_bd_addr_segs zynq_ultra_ps_e_0/SAXIGP3/HP1_DDR_LOW] SEG_zynq_ultra_ps_e_0_HP1_DDR_LOW
##   create_bd_addr_seg -range 0x00040000 -offset 0xFFFC0000 [get_bd_addr_spaces tpg_input/axi_vdma_2/Data_S2MM] [get_bd_addr_segs zynq_ultra_ps_e_0/SAXIGP3/HP1_LPS_OCM] SEG_zynq_ultra_ps_e_0_HP1_LPS_OCM
##   create_bd_addr_seg -range 0x20000000 -offset 0xC0000000 [get_bd_addr_spaces tpg_input/axi_vdma_2/Data_S2MM] [get_bd_addr_segs zynq_ultra_ps_e_0/SAXIGP3/HP1_QSPI] SEG_zynq_ultra_ps_e_0_HP1_QSPI
## 
##   # Restore current instance
##   current_bd_instance $oldCurInst
## 
##   save_bd_design
## }
## create_root_design ""
create_bd_cell: Time (s): cpu = 00:00:07 ; elapsed = 00:00:09 . Memory (MB): peak = 6944.773 ; gain = 435.602 ; free physical = 165279 ; free virtual = 277303
WARNING: [BD 41-1306] The connection to interface pin /tpg_input/v_tc_1/active_video_out is being overridden by the user. This pin will not be connected as a part of interface connection vtiming_out
WARNING: [BD 41-1306] The connection to interface pin /tpg_input/v_vid_in_axi4s_0/vid_active_video is being overridden by the user. This pin will not be connected as a part of interface connection vid_io_in
WARNING: [BD 41-1306] The connection to interface pin /tpg_input/v_tc_1/hblank_out is being overridden by the user. This pin will not be connected as a part of interface connection vtiming_out
WARNING: [BD 41-1306] The connection to interface pin /tpg_input/v_vid_in_axi4s_0/vid_hblank is being overridden by the user. This pin will not be connected as a part of interface connection vid_io_in
WARNING: [BD 41-1306] The connection to interface pin /tpg_input/v_tc_1/hsync_out is being overridden by the user. This pin will not be connected as a part of interface connection vtiming_out
WARNING: [BD 41-1306] The connection to interface pin /tpg_input/v_vid_in_axi4s_0/vid_hsync is being overridden by the user. This pin will not be connected as a part of interface connection vid_io_in
WARNING: [BD 41-1306] The connection to interface pin /tpg_input/v_tc_1/vblank_out is being overridden by the user. This pin will not be connected as a part of interface connection vtiming_out
WARNING: [BD 41-1306] The connection to interface pin /tpg_input/v_vid_in_axi4s_0/vid_vblank is being overridden by the user. This pin will not be connected as a part of interface connection vid_io_in
WARNING: [BD 41-1306] The connection to interface pin /tpg_input/v_tc_1/vsync_out is being overridden by the user. This pin will not be connected as a part of interface connection vtiming_out
WARNING: [BD 41-1306] The connection to interface pin /tpg_input/v_vid_in_axi4s_0/vid_vsync is being overridden by the user. This pin will not be connected as a part of interface connection vid_io_in
WARNING: [BD 41-1306] The connection to interface pin /tpg_input/v_vid_in_axi4s_0/vid_data is being overridden by the user. This pin will not be connected as a part of interface connection vid_io_in
create_bd_cell: Time (s): cpu = 00:00:06 ; elapsed = 00:00:07 . Memory (MB): peak = 7144.102 ; gain = 133.516 ; free physical = 165028 ; free virtual = 277084
WARNING: [BD 41-1306] The connection to interface pin /zynq_ultra_ps_e_0/emio_gpio_o is being overridden by the user. This pin will not be connected as a part of interface connection GPIO_0
Wrote  : </group/paeg/ckohn/zcu102_base_trd_package_2016.3/pl/zcu102_base_trd/zcu102_es2_ev/zcu102_es2_ev.srcs/sources_1/bd/zcu102_es2_ev/zcu102_es2_ev.bd> 
# regenerate_bd_layout -layout_file $scripts_dir/bd_layout.tcl
# validate_bd_design
WARNING: [BD 17-145] Zynq UltraScale IP doesn't support simulation
WARNING: [BD 17-145] Zynq UltraScale IP doesn't support simulation
INFO: [xilinx.com:ip:axi_vdma:6.2-17] /fmc_hdmi_input/axi_vdma_1 
                    All clocks connected to AXI VDMA are not identical, therefore configuring AXI-VDMA in ASYNC mode.
INFO: [xilinx.com:ip:axi_vdma:6.2-17] /tpg_input/axi_vdma_2 
                    All clocks connected to AXI VDMA are not identical, therefore configuring AXI-VDMA in ASYNC mode.
WARNING: [BD 41-237] Bus Interface property AWUSER_WIDTH does not match between /axi_interconnect_hpm0/s00_couplers/auto_ds/S_AXI(0) and /zynq_ultra_ps_e_0/M_AXI_HPM0_FPD(16)
WARNING: [BD 41-237] Bus Interface property ARUSER_WIDTH does not match between /axi_interconnect_hpm0/s00_couplers/auto_ds/S_AXI(0) and /zynq_ultra_ps_e_0/M_AXI_HPM0_FPD(16)
WARNING: [BD 41-237] Bus Interface property AWUSER_WIDTH does not match between /zynq_ultra_ps_e_0/S_AXI_HP1_FPD(1) and /axi_interconnect_hp1/m00_couplers/m00_regslice/M_AXI(0)
WARNING: [BD 41-237] Bus Interface property ARUSER_WIDTH does not match between /zynq_ultra_ps_e_0/S_AXI_HP1_FPD(1) and /axi_interconnect_hp1/m00_couplers/m00_regslice/M_AXI(0)
validate_bd_design: Time (s): cpu = 00:00:09 ; elapsed = 00:00:09 . Memory (MB): peak = 7144.164 ; gain = 0.062 ; free physical = 165027 ; free virtual = 277085
# save_bd_design
Wrote  : </group/paeg/ckohn/zcu102_base_trd_package_2016.3/pl/zcu102_base_trd/zcu102_es2_ev/zcu102_es2_ev.srcs/sources_1/bd/zcu102_es2_ev/zcu102_es2_ev.bd> 
Wrote  : </group/paeg/ckohn/zcu102_base_trd_package_2016.3/pl/zcu102_base_trd/zcu102_es2_ev/zcu102_es2_ev.srcs/sources_1/bd/zcu102_es2_ev/ui/bd_a3793a44.ui> 
# make_wrapper -files [get_files $design_name/$design_name.srcs/sources_1/bd/$design_name/$design_name.bd] -top
INFO: [BD 41-1662] The design 'zcu102_es2_ev.bd' is already validated. Therefore parameter propagation will not be re-run.
WARNING: [BD 41-235] Width mismatch when connecting pin: '/axi_interconnect_hp1/m00_couplers/m00_regslice/m_axi_bid'(1) to net 'm00_regslice_to_m00_couplers_BID'(6) - Only lower order bits will be connected.
WARNING: [BD 41-235] Width mismatch when connecting pin: '/axi_interconnect_hp1/m00_couplers/m00_regslice/m_axi_rid'(1) to net 'm00_regslice_to_m00_couplers_RID'(6) - Only lower order bits will be connected.
WARNING: [BD 41-235] Width mismatch when connecting pin: '/zynq_ultra_ps_e_0/saxigp3_awid'(6) to net 'axi_interconnect_hp0_M00_AXI_AWID'(1) - Only lower order bits will be connected.
WARNING: [BD 41-235] Width mismatch when connecting pin: '/zynq_ultra_ps_e_0/saxigp3_arid'(6) to net 'axi_interconnect_hp0_M00_AXI_ARID'(1) - Only lower order bits will be connected.
Verilog Output written to : /group/paeg/ckohn/zcu102_base_trd_package_2016.3/pl/zcu102_base_trd/zcu102_es2_ev/zcu102_es2_ev.srcs/sources_1/bd/zcu102_es2_ev/hdl/zcu102_es2_ev.v
Verilog Output written to : /group/paeg/ckohn/zcu102_base_trd_package_2016.3/pl/zcu102_base_trd/zcu102_es2_ev/zcu102_es2_ev.srcs/sources_1/bd/zcu102_es2_ev/hdl/zcu102_es2_ev_wrapper.v
# add_files -fileset sources_1 -norecurse $design_name/$design_name.srcs/sources_1/bd/$design_name/hdl/${design_name}_wrapper.v
# add_files -fileset constrs_1 -norecurse [list $constrs_dir/$timing_xdc_file $constrs_dir/$pin_xdc_file $constrs_dir/misc.xdc]
# update_compile_order -fileset sources_1
# update_compile_order -fileset sim_1
WARNING: [Boardtcl 53-1] No current board_part set.
save_bd_design
archive_project /group/paeg/ckohn/zcu102_base_trd_package_2016.3/pl/zcu102_base_trd/zcu102_es2_ev.xpr.zip -force -exclude_run_results
INFO: [Coretcl 2-137] starting archive...
INFO: [Coretcl 2-1499] Saving project copy to temporary location './.Xil/Vivado-18025-xsjl23957' for archiving project
Scanning sources...
Finished scanning sources
WARNING: [filemgmt 56-3] IP Output Repository Path: Could not find the directory '/group/paeg/ckohn/zcu102_base_trd_package_2016.3/pl/zcu102_base_trd/zcu102_es2_ev/zcu102_es2_ev.cache/ip'.
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1700] Loaded user IP repository '/group/paeg/ckohn/zcu102_base_trd_package_2016.3/pl/zcu102_base_trd/srcs/ip'.
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/proj/xbuilds/2016.3_sdx_1130_1/installs/lin64/SDx/2016.3/Vivado/data/ip'.
INFO: [Coretcl 2-1211] Creating project copy for archival...
INFO: [Coretcl 2-135] resetting runs for excluding generated files from archive...
INFO: [Coretcl 2-133] re-setting run 'synth_1'...
INFO: [Coretcl 2-133] re-setting run 'impl_1'...
INFO: [Coretcl 2-1212] Importing remotely added design sources and verilog include files (if any)...
INFO: [filemgmt 20-348] Importing the appropriate files for fileset: 'constrs_1'
INFO: [filemgmt 20-334] All file(s) are already imported in fileset: 'sources_1'
INFO: [filemgmt 20-348] Importing the appropriate files for fileset: 'sources_1'
